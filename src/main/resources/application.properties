#\u6570\u636E\u5E93\u8FDE\u63A5\u4FE1\u606F
server.port=8089
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://116.63.180.133/medicalwaste?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=Zx199257
#配置初始化大小/最小/最大
spring.datasource.initial-size: 1
spring.datasource.min-idle: 1
spring.datasource.max-active: 60
#获取连接等待超时时间
spring.datasource.max-wait: 60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.time-between-eviction-runs-millis: 60000
#一个连接在池中最小生存的时间
spring.datasource.min-evictable-idle-time-millis: 300000
spring.datasource.validation-query: SELECT 'x'
spring.datasource.test-while-idle: true
spring.datasource.test-on-borrow: false
spring.datasource.test-on-return: false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.pool-prepared-statements: false
spring.datasource.max-pool-prepared-statement-per-connection-size: 20
## 该配置节点为独立的节点，有很多人容易将这个配置放在spring的节点下，导致配置无法被识别

mybatis.type-aliases-package=com.module.entity
mybatis.mapper-locations=classpath:mapper/modules/**/*.xml

#分页插件会自动检测当前的数据库链接，自动选择合适的分页方式
pagehelper.helper-dialect=mysql
#分页合理化参数，默认值为false。
#当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。
#默认false 时，直接根据参数进行查询。
pagehelper.reasonable=ture
#支持通过 Mapper 接口参数来传递分页参数，默认值false，
#分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=ture
#为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，
pagehelper.params=count=countSql

#设置单个文件大小，单位MB和KB都可以
spring.servlet.multipart.max-file-size=2MB
#设置总上传的数据大小，单位MB和KB都可以
spring.servlet.multipart.max-request-size=200MB

#jwt相关设置:密钥和token过期时间
jwt.config.key=lfzn
jwt.config.ttl=3600000



# 设置邮箱主机
#spring.mail.host=smtp.qq.com

# 设置用户名
#spring.mail.username=1648577019@qq.com

# 设置密码，该处的密码是QQ邮箱开启SMTP的授权码而非QQ密码
#spring.mail.password=bdaojtpurvheejad
#bdaojtpurvheejad
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
# 如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
#spring.mail.properties.mail.smtp.auth=true

#spring.mail.default-encoding=utf-8
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

#mail.from=${spring.mail.username}